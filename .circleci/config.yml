version: 2

jobs:
  sandbox-plan-apply:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false -backend-config="token=${TFE_TOKEN}" .aws/live/sandbox
            terraform plan .aws/live/sandbox
      - persist_to_workspace:
          root: .
          paths:
            - .

  sandbox-apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve .aws/live/sandbox
      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy-sanbbox:
    docker:
      - image: circleci/node:lts

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install
      - run:
          name: Serverless Configuration
          command: |
            aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID" --profile default
            aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile default
            aws configure set role_arn arn:aws:iam::838374399476:role/admin --profile default
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-

      - run:
          name: Deploy application
          command: sls deploy -s sandbox

workflows:
  version: 2
  sandbox_plan_approve_apply:
    jobs:
      - sandbox-plan-apply
      - hold-apply:
          type: approval
          requires:
            - sandbox-plan-apply
      - sandbox-apply:
          requires:
            - hold-apply
      - deploy-sanbbox:
          requires:
            - sandbox-apply
